[{"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\index.js":"1","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\App.js":"2","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\index.jsx":"3","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\Hooks\\useModal.js":"4","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\public\\Modal\\index.jsx":"5","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ListQuestionBox\\index.jsx":"6","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ButtonBegin\\index.jsx":"7","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\Pages\\QuizPage\\index.jsx":"8","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\components\\Header\\index.jsx":"9","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\api\\testApi.js":"10","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ListUnitsBox\\index.jsx":"11","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\api\\axiosClient.js":"12","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ItemQuestion\\index.jsx":"13","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ButtonAnswer\\index.jsx":"14","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\reportWebVitals.js":"15","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\Pages\\MainPage\\index.jsx":"16","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\QuizBox\\index.jsx":"17","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\components\\NotFound\\index.jsx":"18","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ScoreSection\\index.jsx":"19","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\Timer\\index.jsx":"20"},{"size":500,"mtime":1610080704915,"results":"21","hashOfConfig":"22"},{"size":892,"mtime":1610591715706,"results":"23","hashOfConfig":"22"},{"size":739,"mtime":1610534589788,"results":"24","hashOfConfig":"22"},{"size":259,"mtime":1610442081438,"results":"25","hashOfConfig":"22"},{"size":1855,"mtime":1610531847007,"results":"26","hashOfConfig":"22"},{"size":1830,"mtime":1610616850484,"results":"27","hashOfConfig":"22"},{"size":263,"mtime":1610348545515,"results":"28","hashOfConfig":"22"},{"size":8619,"mtime":1610605229991,"results":"29","hashOfConfig":"22"},{"size":2798,"mtime":1610505699102,"results":"30","hashOfConfig":"22"},{"size":305,"mtime":1610505607690,"results":"31","hashOfConfig":"22"},{"size":960,"mtime":1610611858974,"results":"32","hashOfConfig":"22"},{"size":673,"mtime":1610081950749,"results":"33","hashOfConfig":"22"},{"size":1295,"mtime":1610596762930,"results":"34","hashOfConfig":"22"},{"size":943,"mtime":1610531508586,"results":"35","hashOfConfig":"22"},{"size":362,"mtime":1608084979674,"results":"36","hashOfConfig":"22"},{"size":307,"mtime":1610096028377,"results":"37","hashOfConfig":"22"},{"size":3531,"mtime":1610607167323,"results":"38","hashOfConfig":"22"},{"size":186,"mtime":1610095204038,"results":"39","hashOfConfig":"22"},{"size":1684,"mtime":1610606394366,"results":"40","hashOfConfig":"22"},{"size":869,"mtime":1610617833211,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"140od8h",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\index.js",[],["94","95"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\App.js",[],["96","97"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\index.jsx",["98"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\Hooks\\useModal.js",[],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\public\\Modal\\index.jsx",[],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ListQuestionBox\\index.jsx",["99","100"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ButtonBegin\\index.jsx",["101"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\Pages\\QuizPage\\index.jsx",["102","103","104"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ListQuestionBox from \"../../components/ListQuestionBox\";\r\nimport QuizBox from \"../../components/QuizBox\";\r\nimport ListUnitsBox from \"../../components/ListUnitsBox\";\r\nimport testApi from \"../../../../api/testApi\";\r\n\r\nimport useModal from \"../../../../Hooks/useModal\";\r\nimport Modal from \"../../../../public/Modal\";\r\n\r\n// const QuizBox = React.lazy(() => import(\"../../components/QuizBox\"));\r\n// const ListQuestionBox = React.lazy(() =>\r\n//   import(\"../../components/ListQuestionBox\")\r\n// );\r\n// const ListUnitsBox = React.lazy(() => import(\"../../components/ListUnitsBox\"));\r\n\r\nQuizPage.propTypes = {};\r\n\r\nfunction QuizPage(props) {\r\n  const { url, name } = props.location;\r\n  const [nameUnit, setNameUnit] = useState(\"500 CÃ¢u N45\");\r\n\r\n  const [unitList, setUnitList] = useState([]);\r\n  const [historyQuestionAnswered, setHistoryQuestionAnswered] = useState([]);\r\n  const [historyScored, setHistoryScored] = useState();\r\n  const [modalBindTo, setModalBindTo] = useState();\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  // Hook Modal\r\n  const { isShowing, toggle } = useModal();\r\n\r\n  useEffect(() => {\r\n    setIsFetching(true);\r\n    if (name) {\r\n      setNameUnit(name);\r\n    }\r\n    const fetchProductList = async () => {\r\n      try {\r\n        const params = {\r\n          url: url ? url : \"/testbook/1/unit\",\r\n        };\r\n        const testResponse = await testApi.getAllUnit(params.url);\r\n\r\n        setUnitList(testResponse);\r\n        setHistoryQuestionAnswered(\r\n          Array(testResponse[0].questions.length).fill(false)\r\n        );\r\n        setHistoryScored(Array(testResponse[0].questions.length).fill(0));\r\n        setTimerStart(testResponse[0].timer);\r\n        setQuizAndBeginQuiz(false);\r\n        setIsFetching(false);\r\n      } catch (error) {\r\n        console.log(\"Failed to fetch product list: \", error);\r\n        setIsFetching(false);\r\n      }\r\n    };\r\n\r\n    fetchProductList();\r\n  }, [url]);\r\n\r\n  // Initial Timer\r\n  const [timerStart, setTimerStart] = useState(0);\r\n  const [timer, setTimer] = useState(timerStart);\r\n  // Index Of Test\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [nextUnitIndex, setNextUnitIndex] = useState(0);\r\n  const [currentUnitIndex, setCurrentUnitIndex] = useState(0);\r\n\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [startQuiz, setStartQuiz] = useState(false);\r\n  const [revealAnswers, setRevealAnswers] = useState(false);\r\n  const [historyAnswer, setHistoryAnswer] = useState([]);\r\n\r\n  const currentUnit = unitList[currentUnitIndex];\r\n\r\n  const setQuizAndBeginQuiz = (startQuiz) => {\r\n    setCurrentQuestionIndex(0);\r\n    //setTimerStart(currentUnit.timer);\r\n    setTimer(timerStart);\r\n    setRevealAnswers(false);\r\n    setShowScore(false);\r\n    setHistoryAnswer([]);\r\n    setHistoryQuestionAnswered(Array(currentUnit.questions.length).fill(false));\r\n    setHistoryScored(Array(currentUnit.questions.length).fill(0));\r\n    setStartQuiz(startQuiz);\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    setScore(\r\n      historyScored.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue\r\n      ),\r\n      0\r\n    );\r\n  };\r\n\r\n  const updateTimer = () => {\r\n    if (!revealAnswers && timer > 0) {\r\n      setTimeout(() => setTimer(timer - 1), 1000);\r\n    } else {\r\n      setRevealAnswers(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startQuiz) updateTimer();\r\n  }, [timer, startQuiz]);\r\n\r\n  const handleAnswerOptionClick = (answerOptions) => {\r\n    if (revealAnswers || !startQuiz) return;\r\n\r\n    historyQuestionAnswered.splice(currentQuestionIndex, 1, true);\r\n    historyAnswer.splice(currentQuestionIndex, 1, answerOptions);\r\n\r\n    if (answerOptions === currentUnit.questions[currentQuestionIndex].answer) {\r\n      historyScored.splice(currentQuestionIndex, 1, 1);\r\n    } else {\r\n      historyScored.splice(currentQuestionIndex, 1, 0);\r\n    }\r\n\r\n    const nextQuestionIndex = currentQuestionIndex + 1;\r\n    if (nextQuestionIndex < currentUnit.questions.length) {\r\n      setCurrentQuestionIndex(nextQuestionIndex);\r\n    } else if (historyQuestionAnswered.indexOf(false) !== -1) {\r\n      setCurrentQuestionIndex(historyQuestionAnswered.indexOf(false));\r\n    } else {\r\n      calculateScore();\r\n      setShowScore(true);\r\n      setRevealAnswers(true);\r\n      setStartQuiz(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestionItemClick = (index) => {\r\n    setCurrentQuestionIndex(index);\r\n    setShowScore(false);\r\n  };\r\n\r\n  const handleResetQuiz = () => {\r\n    setQuizAndBeginQuiz(true);\r\n  };\r\n\r\n  const handleCompletedQuiz = (status = \"not-submit\") => {\r\n    if (status === \"submit\") {\r\n      calculateScore();\r\n      setShowScore(true);\r\n      setRevealAnswers(true);\r\n      setStartQuiz(false);\r\n      toggle();\r\n    } else {\r\n      if (\r\n        historyQuestionAnswered.indexOf(false) !== -1 &&\r\n        status === \"not-submit\" &&\r\n        !revealAnswers\r\n      ) {\r\n        toggle();\r\n        setModalBindTo(\"Completed-Click\");\r\n      } else {\r\n        calculateScore();\r\n        setShowScore(true);\r\n        setRevealAnswers(true);\r\n        setStartQuiz(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartQuiz = () => {\r\n    setStartQuiz(true);\r\n    console.log(startQuiz);\r\n  };\r\n\r\n  const handleUnitClick = (unit, status = \"not-submit\") => {\r\n    if (status === \"submit\") {\r\n      toggle();\r\n      setStartQuiz(false);\r\n      setCurrentUnitIndex(unit);\r\n      setQuizAndBeginQuiz(false);\r\n    } else if (startQuiz) {\r\n      setNextUnitIndex(unit);\r\n      setModalBindTo(\"Unit-Click\");\r\n      toggle();\r\n    } else {\r\n      setCurrentUnitIndex(unit);\r\n      setQuizAndBeginQuiz(false);\r\n    }\r\n  };\r\n\r\n  // Handle Next Button\r\n  const handleNextButton = () => {\r\n    if (currentQuestionIndex >= currentUnit.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentUnit.questions.length - 1);\r\n    } else {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n  // Handle Prev Button\r\n  const handlePrevButton = () => {\r\n    if (currentQuestionIndex <= 0) {\r\n      setCurrentQuestionIndex(0);\r\n    } else {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n  //Handle Next Unit\r\n  const handleNextUnitButton = () => {\r\n    console.log(currentUnitIndex);\r\n    if (currentUnitIndex >= unitList.length - 1) {\r\n      setCurrentUnitIndex(0);\r\n    } else {\r\n      setCurrentUnitIndex(currentUnitIndex + 1);\r\n    }\r\n    setQuizAndBeginQuiz(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      {!currentUnit || isFetching ? (\r\n        <div> Loading...</div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          <div className=\"col l-3 m-3\">\r\n            <ListQuestionBox\r\n              timer={timer}\r\n              startQuiz={startQuiz}\r\n              historyAnswer={historyAnswer}\r\n              historyQuestionAnswered={historyQuestionAnswered}\r\n              revealAnswers={revealAnswers}\r\n              currentQuestionIndex={currentQuestionIndex}\r\n              currentUnit={currentUnit}\r\n              handleQuestionItemClick={handleQuestionItemClick}\r\n              handleCompletedQuiz={handleCompletedQuiz}\r\n              handleResetQuiz={handleResetQuiz}\r\n              handleStartQuiz={handleStartQuiz}\r\n            />\r\n          </div>\r\n          <div className=\"col l-6 m-6\">\r\n            <QuizBox\r\n              score={score}\r\n              showScore={showScore}\r\n              historyAnswer={historyAnswer}\r\n              revealAnswers={revealAnswers}\r\n              currentQuestionIndex={currentQuestionIndex}\r\n              currentUnit={currentUnit}\r\n              handleAnswerOptionClick={handleAnswerOptionClick}\r\n              handleNextButton={handleNextButton}\r\n              handlePrevButton={handlePrevButton}\r\n              handleResetQuiz={handleResetQuiz}\r\n              handleNextUnitButton={handleNextUnitButton}\r\n            />\r\n          </div>\r\n          <div className=\"col l-3 m-3\">\r\n            <ListUnitsBox\r\n              unitList={unitList}\r\n              currentUnitIndex={currentUnitIndex}\r\n              handleUnitClick={handleUnitClick}\r\n              name={nameUnit}\r\n            />\r\n          </div>\r\n          <Modal\r\n            isShowing={isShowing}\r\n            hide={toggle}\r\n            modalBindTo={modalBindTo}\r\n            nextUnitIndex={nextUnitIndex}\r\n            handleCompletedQuiz={handleCompletedQuiz}\r\n            handleUnitClick={handleUnitClick}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\components\\Header\\index.jsx",["105"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Header.css\";\r\n\r\nimport \"../../public/grid.css\";\r\nHeader.propTypes = {};\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"grid\">\r\n        <div className=\"row\">\r\n          <div className=\"col l-6\">\r\n            <h1>JapanWord</h1>\r\n          </div>\r\n          <div className=\"col l-6\">\r\n            <ul className=\"nav-list\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  exact\r\n                  className=\"header__link\"\r\n                  to={{\r\n                    pathname: \"/japanword/main\",\r\n                    url: \"/test/1/unit\",\r\n                  }}\r\n                  activeClassName=\"header__link--active\"\r\n                >\r\n                  ChÆ°Æ¡ng trÃ¬nh tiáº¿ng Nháº­t\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  exact\r\n                  className=\"header__link\"\r\n                  to={{\r\n                    pathname: \"/japanword/quiz\",\r\n                    url: \"/testbook/1/unit\",\r\n                  }}\r\n                  activeClassName=\"header__link--active\"\r\n                >\r\n                  Luyá»n thi tiáº¿ng Nháº­t\r\n                </NavLink>\r\n                <div className=\"test-panel\">\r\n                  <ul className=\"test-panel-list\">\r\n                    <li className=\"test-panel-item\">\r\n                      <NavLink\r\n                        exact\r\n                        className=\"header__link\"\r\n                        to={{\r\n                          pathname: \"/japanword/quiz\",\r\n                          url: \"/testbook/1/unit\",\r\n                          name: \"500 cÃ¢u N45\",\r\n                        }}\r\n                        activeClassName=\"header__link--active\"\r\n                      >\r\n                        500 cÃ¢u N45\r\n                      </NavLink>\r\n                    </li>\r\n                    <li className=\"test-panel-item\">\r\n                      <NavLink\r\n                        exact\r\n                        className=\"header__link\"\r\n                        to={{\r\n                          pathname: \"/japanword/quiz\",\r\n                          url: \"/testbook/2/unit\",\r\n                          name: \"500 cÃ¢u N3\",\r\n                        }}\r\n                        activeClassName=\"header__link--active\"\r\n                      >\r\n                        500 cÃ¢u N3\r\n                      </NavLink>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\api\\testApi.js",[],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ListUnitsBox\\index.jsx",["106"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ListUnitsBox.css\";\r\n\r\nListUnitsBox.propTypes = {};\r\n\r\nfunction ListUnitsBox(props) {\r\n  const { unitList, currentUnitIndex, handleUnitClick, name } = props;\r\n\r\n  return (\r\n    <div className=\"list-test-box\">\r\n      <span class=\"unit-name\">{name}</span>\r\n      <div className=\"list-unit-item\">\r\n        <ul className=\"list-day\">\r\n          {unitList.map((unit, index) => (\r\n            <li\r\n              className={\r\n                index === currentUnitIndex\r\n                  ? \"list-day-item list-day-item--current\"\r\n                  : \"list-day-item\"\r\n              }\r\n              onClick={() => handleUnitClick(index)}\r\n            >\r\n              <span className=\"day-text\">Äá» sá»</span>\r\n              <span className=\"day-number\">{index + 1}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListUnitsBox;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\api\\axiosClient.js",[],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ItemQuestion\\index.jsx",["107","108"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CorrectLogo from \"../../../../public/images/check.svg\";\r\nimport InCorrectLogo from \"../../../../public/images/cross.svg\";\r\nimport CircleLogo from \"../../../../public/images/circle.svg\";\r\n\r\nItemQuestion.propTypes = {};\r\n\r\nfunction ItemQuestion(props) {\r\n  const {\r\n    currentQuestionIndex,\r\n    revealAnswers,\r\n    isSelectedAnswer,\r\n    isSelectedQuestion,\r\n    handleQuestionItemClick,\r\n    index,\r\n  } = props;\r\n\r\n  let text;\r\n  if (revealAnswers && isSelectedAnswer) {\r\n    text = <img src={CorrectLogo} alt=\"Correct Logo\" width=\"20px\" />;\r\n  } else if (revealAnswers && !isSelectedAnswer) {\r\n    text = <img src={InCorrectLogo} alt=\"Correct Logo\" width=\"20px\" />;\r\n  } else if (isSelectedQuestion) {\r\n    text = <img src={CircleLogo} alt=\"Correct Logo\" width=\"20px\" />;\r\n  } else {\r\n    text = index + 1;\r\n  }\r\n  return (\r\n    <li\r\n      //style={{ backgroundColor: backgroundColor }}\r\n      className={\r\n        index === currentQuestionIndex\r\n          ? \"list-question-item list-question-item--current\"\r\n          : \"list-question-item\"\r\n      }\r\n      onClick={() => handleQuestionItemClick(index)}\r\n    >\r\n      {/* {index + 1} */}\r\n      {text}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ItemQuestion;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ButtonAnswer\\index.jsx",["109","110"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButtonAnswer.propTypes = {};\r\n\r\nfunction ButtonAnswer(props) {\r\n  const {\r\n    handleAnswerOptionClick,\r\n    isCorrectAnswer,\r\n    isSelectedAnswer,\r\n    answerOption,\r\n    revealAnswers,\r\n  } = props;\r\n  let backgroundColor;\r\n  let borderColor;\r\n  let color;\r\n  if (revealAnswers && isCorrectAnswer) {\r\n    backgroundColor = \"#4ce165\";\r\n    borderColor = \"#07c527\";\r\n    color = \"white\";\r\n  } else if (revealAnswers && isSelectedAnswer) {\r\n    backgroundColor = \"#ff6465\";\r\n    borderColor = \"#d33435\";\r\n    color = \"white\";\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn-answer\"\r\n      style={{\r\n        backgroundColor: backgroundColor,\r\n        borderColor: borderColor,\r\n        color: color,\r\n      }}\r\n      onClick={() => handleAnswerOptionClick(answerOption)}\r\n    >\r\n      {answerOption}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonAnswer;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\reportWebVitals.js",[],["111","112"],"E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\Pages\\MainPage\\index.jsx",["113","114"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"../../../../components/Header\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  return (\r\n    <div className=\"japanword-app\">\r\n      <div>MainPage Pages</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\QuizBox\\index.jsx",["115"],"import React from \"react\";\r\nimport ReactFuri from \"react-furi\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonAnswer from \"../ButtonAnswer\";\r\n\r\nimport \"./QuizBox.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ScoreSection from \"../ScoreSection\";\r\n\r\nQuizBox.propTypes = {};\r\n\r\nfunction QuizBox(props) {\r\n  const {\r\n    showScore,\r\n    score,\r\n    currentUnit,\r\n    historyAnswer,\r\n    currentQuestionIndex,\r\n    revealAnswers,\r\n    handleAnswerOptionClick,\r\n    handleNextButton,\r\n    handlePrevButton,\r\n    handleResetQuiz,\r\n    handleNextUnitButton,\r\n  } = props;\r\n\r\n  const currentQuestion = currentUnit.questions[currentQuestionIndex];\r\n  return (\r\n    <div className=\"quiz-box\">\r\n      {showScore ? (\r\n        <ScoreSection\r\n          score={score}\r\n          currentUnit={currentUnit}\r\n          handleResetQuiz={handleResetQuiz}\r\n          handleNextUnitButton={handleNextUnitButton}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <div className=\"question-number\">\r\n              CÃ¢u {currentQuestionIndex + 1}\r\n            </div>\r\n            <ReactFuri\r\n              word={currentQuestion.questionText}\r\n              reading={currentQuestion.questionTextFuri}\r\n              render={({ pairs }) => (\r\n                <h3 lang=\"ja\">\r\n                  {pairs.map(([furigana, text], index) => (\r\n                    <ReactFuri.Pair key={index}>\r\n                      {text === currentQuestion.keyword ? (\r\n                        <>\r\n                          <span className=\"furi-text\"> {furigana}</span>\r\n                          <ReactFuri.Text\r\n                            style={{ textDecoration: \"underline\" }}\r\n                          >\r\n                            {text}\r\n                          </ReactFuri.Text>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <span className=\"furi-text\"> {furigana}</span>\r\n                          <ReactFuri.Text>{text}</ReactFuri.Text>\r\n                        </>\r\n                      )}\r\n                    </ReactFuri.Pair>\r\n                  ))}\r\n                </h3>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"answer-section\">\r\n            <button className=\"next-btn\" onClick={() => handleNextButton()}>\r\n              <FontAwesomeIcon icon={[\"fas\", \"angle-right\"]} />\r\n            </button>\r\n            <button className=\"prev-btn\" onClick={() => handlePrevButton()}>\r\n              <FontAwesomeIcon icon={[\"fas\", \"angle-left\"]} />\r\n            </button>\r\n            <div className=\"grid\">\r\n              <div className=\"row\">\r\n                {currentQuestion.answerOptions.map((answerOption, index) => (\r\n                  <div className=\"l-6 m-6 c-12\">\r\n                    <ButtonAnswer\r\n                      key={`answerOption-${index}`}\r\n                      answerOption={answerOption}\r\n                      isCorrectAnswer={answerOption === currentQuestion.answer}\r\n                      isSelectedAnswer={\r\n                        answerOption === historyAnswer[currentQuestionIndex]\r\n                      }\r\n                      revealAnswers={revealAnswers}\r\n                      handleAnswerOptionClick={handleAnswerOptionClick}\r\n                    ></ButtonAnswer>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizBox;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\components\\NotFound\\index.jsx",["116"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n  return <div>Not Found</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\ScoreSection\\index.jsx",["117"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CorrectLogo from \"../../../../public/images/check.svg\";\r\nimport InCorrectLogo from \"../../../../public/images/cross.svg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nScoreSection.propTypes = {};\r\n\r\nfunction ScoreSection(props) {\r\n  const { score, currentUnit, handleResetQuiz, handleNextUnitButton } = props;\r\n  return (\r\n    <div className=\"score-section\">\r\n      <div className=\"score-box\">\r\n        <div className=\"score-header\">\r\n          <h3>Káº¿t quáº£</h3>\r\n        </div>\r\n        <div className=\"score-body\">\r\n          <div className=\"score-detail\">\r\n            <span className=\"score-text\">\r\n              {score} / {currentUnit.questions.length}\r\n            </span>\r\n            <img src={CorrectLogo} alt=\"Correct Logo\" width=\"20px\" />{\" \"}\r\n          </div>\r\n          <div className=\"score-detail\">\r\n            <span className=\"score-text\">\r\n              {currentUnit.questions.length - score} /{\" \"}\r\n              {currentUnit.questions.length}\r\n            </span>\r\n            <img src={InCorrectLogo} alt=\"Correct Logo\" width=\"20px\" />{\" \"}\r\n          </div>\r\n        </div>\r\n        <div className=\"score=footer\">\r\n          <button className=\"restart-btn\" onClick={() => handleResetQuiz()}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"redo\"]} />\r\n          </button>\r\n          <button\r\n            className=\"next-unit-btn\"\r\n            onClick={() => handleNextUnitButton()}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fas\", \"arrow-right\"]} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreSection;\r\n","E:\\dat\\Study\\Reactjs\\Workspace\\react-jpw-app\\src\\features\\JapanWord\\components\\Timer\\index.jsx",["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"130","line":26,"column":9,"nodeType":"128","messageId":"129","endLine":26,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":60,"column":6,"nodeType":"133","endLine":60,"endColumn":11,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":109,"column":6,"nodeType":"133","endLine":109,"endColumn":24,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"137","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"137","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"120","replacedBy":"138"},{"ruleId":"122","replacedBy":"139"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"140","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"137","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'TIMER_START_VALUE' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'setQuizAndBeginQuiz'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'updateTimer'. Either include it or remove the dependency array.",["144"],"'useState' is defined but never used.",["141"],["142"],"'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [name, setQuizAndBeginQuiz, url]",{"range":"149","text":"150"},"Update the dependencies array to be: [timer, startQuiz, updateTimer]",{"range":"151","text":"152"},[2013,2018],"[name, setQuizAndBeginQuiz, url]",[3533,3551],"[timer, startQuiz, updateTimer]"]